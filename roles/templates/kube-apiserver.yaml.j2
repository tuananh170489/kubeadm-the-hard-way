apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --advertise-address={{ ansible_default_ipv4['address'] }}
    - --allow-privileged=true
    - --audit-policy-file={{ k8s_kubeconfig_path }}/audit.yaml
    - --audit-log-maxage=30
    - --audit-log-maxbackup=3
    - --audit-log-maxsize=100
    - --audit-log-format=json
    - --audit-log-path={{ k8s_log_path }}/audit.json
    {% if k8s_version is version('1.20.0', operator='ge', strict=True) -%}
    - --audit-log-compress=true
    {% endif -%}
    - --anonymous-auth=false
    - --profiling=false
    - --authorization-mode=Node,RBAC
    - --cert-dir={{ k8s_pki_path }}
    - --client-ca-file={{ k8s_pki_path }}/ca.crt
    - --enable-aggregator-routing=true
    - --enable-swagger-ui=true
    - --enable-admission-plugins={% for plugin in k8s_apis_enable_admission_plugins %}{{ plugin }}{%- if not loop.last -%},{% endif %}{% endfor %}
    - --enable-bootstrap-token-auth=true
    - --etcd-cafile={{ k8s_pki_path }}/etcd/ca.crt
    - --etcd-certfile={{ k8s_pki_path }}/etcd/apiserver-etcd-client.crt
    - --etcd-keyfile={{ k8s_pki_path }}/etcd/apiserver-etcd-client.key
    {% if etcd_nodes_length | int > 1 -%}
    - --etcd-servers={% for host in groups['etcd'] %}https://etcd{{ groups['etcd'].index(host) + 1 }}.{{ k8s_env }}.{{ k8s_ssl_domain }}:2379{%- if not loop.last -%},{% endif %}{% endfor %}
    {% else %}
    - --etcd-servers=https://etcd.{{ k8s_env }}.{{ k8s_ssl_domain }}:2379
    {% endif -%}
    - --secure-port={{ k8s_apis_port }}
    - --event-ttl={{ k8s_apis_event_ttl }}
    - --encryption-provider-config={{ k8s_kubeconfig_path }}/encryption.yaml
    - --kubelet-certificate-authority={{ k8s_pki_path }}/ca.crt
    - --kubelet-client-certificate={{ k8s_pki_path }}/apiserver-kubelet-client.crt
    - --kubelet-client-key={{ k8s_pki_path }}/apiserver-kubelet-client.key
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --proxy-client-cert-file={{ k8s_pki_path }}/front-proxy-client.crt
    - --proxy-client-key-file={{ k8s_pki_path }}/front-proxy-client.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file={{ k8s_pki_path }}/front-proxy-ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    {% if k8s_version is version('1.20.0', operator='ge', strict=True) -%}
    - --service-account-issuer=https://kubernetes.default.svc
    - --service-account-signing-key-file={{ k8s_pki_path }}/sa.key
    {% endif -%}
    - --service-account-key-file={{ k8s_pki_path }}/sa.pub
    - --service-cluster-ip-range={{ k8s_service_cidr }}
    - --tls-cert-file={{ k8s_pki_path }}/apiserver.crt
    - --tls-private-key-file={{ k8s_pki_path }}/apiserver.key
    - --v=2
    image: k8s.gcr.io/kube-apiserver:v{{ k8s_version }}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: {{ ansible_default_ipv4['address'] }}
        path: /livez
        port: {{ k8s_apis_port }}
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    name: kube-apiserver
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: {{ ansible_default_ipv4['address'] }}
        path: /readyz
        port: {{ k8s_apis_port }}
        scheme: HTTPS
      periodSeconds: 1
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 250m
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: {{ ansible_default_ipv4['address'] }}
        path: /livez
        port: {{ k8s_apis_port }}
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: ca-certs
      readOnly: true
    - mountPath: /etc/ca-certificates
      name: etc-ca-certificates
      readOnly: true
    - mountPath: {{ k8s_pki_path }}
      name: k8s-certs
      readOnly: true
    - mountPath: /usr/local/share/ca-certificates
      name: usr-local-share-ca-certificates
      readOnly: true
    - mountPath: /usr/share/ca-certificates
      name: usr-share-ca-certificates
      readOnly: true
    - mountPath: {{ k8s_kubeconfig_path }}/encryption.yaml
      name: encryption
      readOnly: true
    - mountPath: {{ k8s_log_path }}
      name: var-log-kubernetes
  hostNetwork: true
  priorityClassName: system-node-critical
  volumes:
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: /etc/ca-certificates
      type: DirectoryOrCreate
    name: etc-ca-certificates
  - hostPath:
      path: {{ k8s_pki_path }}
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: /usr/local/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-local-share-ca-certificates
  - hostPath:
      path: /usr/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-share-ca-certificates
  - hostPath:
      path: {{ k8s_kubeconfig_path }}/encryption.yaml
      type: FileOrCreate
    name: encryption
  - hostPath:
      path: {{ k8s_log_path }}
      type: DirectoryOrCreate