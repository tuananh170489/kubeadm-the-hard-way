- name: Create the installation directories
  file:
    path: '{{ item }}'
    state: directory
    recurse: yes
  loop:
    - /etc/cni/net.d
    - /etc/containerd
    - /opt/cni/bin
    - /var/lib/kubelet
    - /var/run/kubernetes

- name: Download kubelet binaries
  get_url:
    url: '{{ item }}'
    dest: /usr/local/bin/
    mode: 0755
  loop:
    - https://storage.googleapis.com/kubernetes-release/release/v{{ k8s_version }}/bin/linux/amd64/kubelet

- name: Download CNI and CRI plugins
  get_url:
    url: '{{ item }}'
    dest: /tmp/
  loop:
    - https://github.com/containernetworking/plugins/releases/download/v{{ cni_version }}/cni-plugins-amd64-v{{ cni_version }}.tgz
    - https://storage.googleapis.com/cri-containerd-release/cri-containerd-{{ cri_version }}.linux-amd64.tar.gz

- name: Install CNI plugins
  unarchive:
    remote_src: yes
    src: /tmp/cni-plugins-amd64-v{{ cni_version }}.tgz
    dest: /opt/cni/bin/

- name: Install CRI plugins
  unarchive:
    remote_src: yes
    src: /tmp/cri-containerd-{{ cri_version }}.linux-amd64.tar.gz
    dest: /
    mode: 0755
    extra_opts:
      - --no-overwrite-dir
      - ./usr/local/bin/crictl
      - ./usr/local/bin/containerd
      - ./usr/local/bin/containerd-shim
      - ./usr/local/sbin/runc
      - ./etc/crictl.yaml

- name: Create the containerd configuration file
  copy:
    src: config.toml
    dest: /etc/containerd

- name: Create the kubelet-config.yaml configuration file
  template:
    src: kubelet-config.yaml.j2
    dest: /etc/kubernetes/config/kubelet-config.yaml

- name: Create kubeconfig file for kubelet
  template:
    src: '{{ kubeconfig_dir }}/{{ item }}.kubeconfig'
    dest: '{{ kubeconfig_path }}/kubelet.kubeconfig'
  loop: "{{ groups['worker'] }}"

- name: Create worker services
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  loop:
    - { src: containerd.service.j2, dest: /etc/systemd/system/containerd.service }
    - { src: kubelet.service.j2, dest: /etc/systemd/system/kubelet.service }

- name: Be sure worker services is running and enabled
  service:
    name:
      - containerd
      - kubelet
    state: started
    enabled: yes