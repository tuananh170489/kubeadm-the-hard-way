# apiVersion: kubeadm.k8s.io/v1alpha3
# bootstrapTokens:
# - groups:
#   - system:bootstrappers:kubeadm:default-node-token
#   token: abcdef.0123456789abcdef
#   ttl: 24h0m0s
#   usages:
#   - signing
#   - authentication
# kind: InitConfiguration
# localAPIEndpoint:
#   advertiseAddress: "{{ master_node_ip }}"
#   bindPort: 6443
# ---
apiVersion: kubeadm.k8s.io/v1beta1
certificatesDir: /etc/kubernetes/ca
clusterName: "{{ k8s_cluster_name }}"
# dns:
#   type: CoreDNS
# etcd:
#   local:
#     dataDir: /var/lib/etcd
#   serverCertSANs:
#   - "{{ inventory_hostname }}"
#   peerCertSANs:
#   - "{{ etcd_ip }}"
#   extraArgs:
#     name: "{{ inventory_hostname }}"
#     cert-file: /etc/etcd/kubernetes.pem
#     key-file: /etc/etcd/kubernetes-key.pem
#     peer-cert-file: /etc/etcd/kubernetes.pem
#     peer-key-file: /etc/etcd/kubernetes-key.pem
#     trusted-ca-file: /etc/etcd/ca.pem
#     peer-trusted-ca-file: /etc/etcd/ca.pem
#     peer-client-cert-auth: true
#     client-cert-auth: true
#     initial-advertise-peer-urls: https://{{ etcd_ip }}:2380
#     listen-peer-urls: https://{{ etcd_ip }}:2380
#     listen-client-urls: https://{{ etcd_ip }}:2379,https://127.0.0.1:2379
#     advertise-client-urls: https://{{ etcd_ip }}:2379
#     initial-cluster-token: etcd-cluster-0
#     initial-cluster: "{{ inventory_hostname }}"=https://{{ etcd_ip }}:2380
#     initial-cluster-state: new
apiServerExtraArgs:
  # extraArgs:
  advertise-address: "{{ master_node_ip }}"
  allow-privileged: true
  apiserver-count: 1
  audit-log-maxage: 30
  audit-log-maxbackup: 3
  audit-log-maxsize: 100
  audit-log-path: /var/log/kubernetes/audit/kube-api-audit.log
  authorization-mode: "Node,RBAC"
  bind-address: 0.0.0.0
  client-ca-file: /etc/kubernetes/ca/ca.pem
  enable-admission-plugins: "Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota"
  enable-swagger-ui: true
  etcd-cafile: /etc/kubernetes/ca/ca.pem
  etcd-certfile: /etc/kubernetes/ca/kubernetes.pem
  etcd-keyfile: /etc/kubernetes/ca/kubernetes-key.pem
  etcd-servers: https://{{ etcd_ip }}:2379
  event-ttl: 12h
  experimental-encryption-provider-config: /etc/kubernetes/config/encryption-config.yaml
  kubelet-certificate-authority: /etc/kubernetes/ca/ca.pem
  kubelet-client-certificate: /etc/kubernetes/ca/kubernetes.pem
  kubelet-client-key: /etc/kubernetes/ca/kubernetes-key.pem
  kubelet-https: true
  runtime-config: api/all
  service-account-key-file: /etc/kubernetes/ca/service-account.pem
  service-cluster-ip-range: "{{ service_cidr }}"
  service-node-port-range: 30000-32767
  tls-cert-file: /etc/kubernetes/ca/kubernetes.pem
  tls-private-key-file: /etc/kubernetes/ca/kubernetes-key.pem
  # certSANs:
  # - "{{ master_node_ip }}"
  # - "{{ inventory_hostname }}"
#   timeoutForControlPlane: 4m0s
# controlPlaneEndpoint: "{{ master_node_ip }}:6443"
# controllerManagerExtraArgs:
#   # extraArgs:
#   bind-address: 0.0.0.0
#   allocate-node-cidrs: true
#   cluster-cidr: "{{ cluster_cidr }}"
#   cluster-name: "{{ k8s_cluster_name }}"
#   cluster-signing-cert-file: /etc/kubernetes/ca/ca.pem
#   cluster-signing-key-file: /etc/kubernetes/ca/ca-key.pem
#   kubeconfig: /etc/kubernetes/config/kube-controller-manager.kubeconfig
#   leader-elect: true
#   root-ca-file: /etc/kubernetes/ca/ca.pem
#   service-account-private-key-file: /etc/kubernetes/ca/service-account-key.pem
#   service-cluster-ip-range: "{{ service_cidr }}"
#   use-service-account-credentials: true
# schedulerExtraArgs:
#   # extraArgs:
#   kubeconfig: /etc/kubernetes/config/kube-scheduler.kubeconfig
#   leader-elect: true
kind: ClusterConfiguration
kubernetesVersion: v1.12.0
# networking:
#   dnsDomain: cluster.local
#   podSubnet: "{{ pod_cidr }}"
#   serviceSubnet: "{{ service_cidr }}"
# ---
# apiVersion: kubelet.config.k8s.io/v1beta1
# authentication:
#   anonymous:
#     enabled: false
#   webhook:
#     cacheTTL: 2m0s
#     enabled: true
#   x509:
#     clientCAFile: /etc/kubernetes/ca/ca.pem
# authorization:
#   mode: Webhook
#   webhook:
#     cacheAuthorizedTTL: 5m0s
#     cacheUnauthorizedTTL: 30s
# cgroupDriver: cgroupfs
# cgroupsPerQOS: true
# clusterDNS:
# - "{{ cluster_dns }}"
# clusterDomain: cluster.local
# configMapAndSecretChangeDetectionStrategy: Watch
# containerLogMaxFiles: 5
# containerLogMaxSize: 10Mi
# contentType: application/vnd.kubernetes.protobuf
# cpuCFSQuota: true
# cpuCFSQuotaPeriod: 100ms
# cpuManagerPolicy: none
# cpuManagerReconcilePeriod: 10s
# enableControllerAttachDetach: true
# enableDebuggingHandlers: true
# enforceNodeAllocatable:
# - pods
# eventBurst: 10
# eventRecordQPS: 5
# evictionHard:
#   imagefs.available: 15%
#   memory.available: 100Mi
#   nodefs.available: 10%
#   nodefs.inodesFree: 5%
# evictionPressureTransitionPeriod: 5m0s
# failSwapOn: false
# fileCheckFrequency: 20s
# hairpinMode: promiscuous-bridge
# healthzBindAddress: 127.0.0.1
# healthzPort: 10248
# httpCheckFrequency: 20s
# imageGCHighThresholdPercent: 85
# imageGCLowThresholdPercent: 80
# imageMinimumGCAge: 2m0s
# iptablesDropBit: 15
# iptablesMasqueradeBit: 14
# kind: KubeletConfiguration
# kubeAPIBurst: 10
# kubeAPIQPS: 5
# makeIPTablesUtilChains: true
# maxOpenFiles: 1000000
# maxPods: 110
# nodeLeaseDurationSeconds: 40
# nodeStatusUpdateFrequency: 10s
# oomScoreAdj: -999
# podPidsLimit: -1
# port: 10250
# registryBurst: 10
# registryPullQPS: 5
# resolvConf: /etc/resolv.conf
# rotateCertificates: true
# runtimeRequestTimeout: 2m0s
# serializeImagePulls: true
# staticPodPath: /etc/kubernetes/manifests
# streamingConnectionIdleTimeout: 4h0m0s
# syncFrequency: 1m0s
# volumeStatsAggPeriod: 1m0s
# ---
# apiVersion: kubeproxy.config.k8s.io/v1alpha1
# bindAddress: 0.0.0.0
# clientConnection:
#   acceptContentTypes: ""
#   burst: 10
#   contentType: application/vnd.kubernetes.protobuf
#   kubeconfig: /etc/kubernetes/config/kubeconfig.conf
#   qps: 5
# clusterCIDR: "{{ cluster_cidr }}"
# configSyncPeriod: 15m0s
# conntrack:
#   max: 131072
#   maxPerCore: 32768
#   min: 65536
#   tcpCloseWaitTimeout: 1h0m0s
#   tcpEstablishedTimeout: 24h0m0s
# enableProfiling: false
# healthzBindAddress: 0.0.0.0:10256
# hostnameOverride: ""
# iptables:
#   masqueradeAll: true
#   masqueradeBit: 14
#   minSyncPeriod: 0s
#   syncPeriod: 30s
# ipvs:
#   excludeCIDRs: null
#   minSyncPeriod: 0s
#   scheduler: ""
#   syncPeriod: 30s
# kind: KubeProxyConfiguration
# metricsBindAddress: 127.0.0.1:10249
# mode: "iptables"
# nodePortAddresses: null
# oomScoreAdj: -999
# portRange: ""
# resourceContainer: /kube-proxy
# udpIdleTimeout: 250ms
# # ---
# # apiEndpoint:
# #   advertiseAddress: "{{ master_node_ip }}"
# #   bindPort: 6443
# # apiVersion: kubeadm.k8s.io/v1alpha3
# # caCertPath: /etc/kubernetes/ca/ca.pem
# # clusterName: "{{ k8s_cluster_name }}"
# # discoveryFile: ""
# # discoveryTimeout: 5m0s
# # discoveryToken: abcdef.0123456789abcdef
# # discoveryTokenAPIServers:
# # - kube-apiserver:6443
# # discoveryTokenUnsafeSkipCAVerification: true
# # kind: JoinConfiguration
# # tlsBootstrapToken: abcdef.0123456789abcdef
# # token: abcdef.0123456789abcdef