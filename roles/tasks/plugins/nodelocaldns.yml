- name: Create NodeLocalDNS service account
  kubernetes.core.k8s:
    kubeconfig: ~/.kube/config
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: node-local-dns
        namespace: kube-system
        labels:
          kubernetes.io/cluster-service: "true"
          addonmanager.kubernetes.io/mode: Reconcile

- name: Create NodeLocalDNS ClusterRole
  kubernetes.core.k8s:
    kubeconfig: ~/.kube/config
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:coredns
      rules:
      - apiGroups:
        - ""
        resources:
        - endpoints
        - services
        - pods
        - namespaces
        verbs:
        - list
        - watch
      - apiGroups:
        - ""
        resources:
        - nodes
        verbs:
        - get

- name: Create NodeLocalDNS ClusterRoleBinding
  kubernetes.core.k8s:
    kubeconfig: ~/.kube/config
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        annotations:
          rbac.authorization.kubernetes.io/autoupdate: "true"
        labels:
          kubernetes.io/bootstrapping: rbac-defaults
        name: system:coredns
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:coredns
      subjects:
      - kind: ServiceAccount
        name: coredns
        namespace: kube-system

- name: Create NodeLocalDNS configmap
  kubernetes.core.k8s:
    kubeconfig: ~/.kube/config
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: node-local-dns
        namespace: kube-system
        labels:
          addonmanager.kubernetes.io/mode: Reconcile
      data:
        Corefile: |
          cluster.local:53 {
              errors
              cache {
                success 9984 30
                denial 9984 5
              }
              reload
              loop
              bind 169.254.0.10
              forward . {{ k8s_service_cidr | ipaddr('10') | ipaddr('address') }} {
                force_tcp
              }
              prometheus :9253
              health 169.254.0.10:8081
              }
          in-addr.arpa:53 {
              errors
              cache 30
              reload
              loop
              bind 169.254.0.10
              forward . {{ k8s_service_cidr | ipaddr('10') | ipaddr('address') }} {
                force_tcp
              }
              prometheus :9253
              }
          .:53 {
              errors
              cache 30
              reload
              loop
              bind 169.254.0.10
              forward . 1.1.1.1 {
                prefer_udp
              }
              prometheus :9253
              }

- name: Create NodeLocalDNS deployment
  kubernetes.core.k8s:
    kubeconfig: ~/.kube/config
    state: present
    definition:
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: node-local-dns
        namespace: kube-system
        labels:
          k8s-app: node-local-dns
          kubernetes.io/cluster-service: "true"
          addonmanager.kubernetes.io/mode: Reconcile
      spec:
        updateStrategy:
          rollingUpdate:
            maxUnavailable: 10%
        selector:
          matchLabels:
            k8s-app: node-local-dns
        template:
          metadata:
            labels:
              k8s-app: node-local-dns
            annotations:
              prometheus.io/port: "9253"
              prometheus.io/scrape: "true"
          spec:
            priorityClassName: system-node-critical
            serviceAccountName: node-local-dns
            hostNetwork: true
            dnsPolicy: Default
            tolerations:
            - key: "CriticalAddonsOnly"
              operator: "Exists"
            - effect: "NoExecute"
              operator: "Exists"
            - effect: "NoSchedule"
              operator: "Exists"
            containers:
            - name: node-cache
              image: k8s.gcr.io/dns/k8s-dns-node-cache:{{ nodelocaldns }}
              resources:
                requests:
                  cpu: 25m
                  memory: 5Mi
              args:
              - "-localip"
              - "169.254.0.10"
              - "-conf"
              - "/etc/Corefile"
              - "-upstreamsvc"
              - "kube-dns-upstream"
              securityContext:
                privileged: true
              ports:
              - containerPort: 53
                name: dns
                protocol: UDP
              - containerPort: 53
                name: dns-tcp
                protocol: TCP
              - containerPort: 9253
                name: metrics
                protocol: TCP
              livenessProbe:
                httpGet:
                  host: 169.254.0.10
                  path: /health
                  port: 8081
                initialDelaySeconds: 60
                timeoutSeconds: 5
              volumeMounts:
              - mountPath: /run/xtables.lock
                name: xtables-lock
                readOnly: false
              - name: config-volume
                mountPath: /etc/coredns
              - name: kube-dns-config
                mountPath: /etc/kube-dns
            volumes:
            - name: xtables-lock
              hostPath:
                path: /run/xtables.lock
                type: FileOrCreate
            - name: kube-dns-config
              configMap:
                name: kube-dns
                optional: true
            - name: config-volume
              configMap:
                name: node-local-dns
                items:
                  - key: Corefile
                    path: Corefile.base

- name: Create NodeLocalDNS service
  kubernetes.core.k8s:
    kubeconfig: ~/.kube/config
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: kube-dns-upstream
        namespace: kube-system
        labels:
          k8s-app: kube-dns
          kubernetes.io/cluster-service: "true"
          addonmanager.kubernetes.io/mode: Reconcile
          kubernetes.io/name: "KubeDNSUpstream"
      spec:
        ports:
        - name: dns
          port: 53
          protocol: UDP
          targetPort: 53
        - name: dns-tcp
          port: 53
          protocol: TCP
          targetPort: 53
        selector:
          k8s-app: kube-dns

- name: Create NodeLocalDNS service
  kubernetes.core.k8s:
    kubeconfig: ~/.kube/config
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        annotations:
          prometheus.io/port: "9253"
          prometheus.io/scrape: "true"
        labels:
          k8s-app: node-local-dns
        name: node-local-dns
        namespace: kube-system
      spec:
        clusterIP: None
        ports:
          - name: metrics
            port: 9253
            targetPort: 9253
        selector:
          k8s-app: node-local-dns