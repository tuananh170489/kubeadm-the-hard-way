- name: Create PKI directory
  file:
    path: '{{ item }}'
    state: directory
  loop:
    - '{{ pki_path }}'
    - '{{ pki_etcd_path }}'
    - '{{ pki_k8s_path }}'
    - '{{ pki_front_proxy }}'

- name: Generate CA private key
  openssl_privatekey:
    path: '{{ pki_path }}/ca-key.pem'

- name: Generate CA CSR
  openssl_csr:
    path: '{{ pki_path }}/ca.csr'
    privatekey_path: '{{ pki_path }}/ca-key.pem'
    basic_constraints: "CA:TRUE"
    basic_constraints_critical: True
    key_usage:
      - cRLSign
      - keyCertSign
    key_usage_critical: True
    common_name: '{{ common_name }}'
    country_name: '{{ country }}'
    locality_name: '{{ location }}'
    organization_name: '{{ organization }}'
    organizational_unit_name: '{{ organization_unit }}'

- name: Generate CA certificate
  openssl_certificate:
    path: '{{ pki_path }}/ca.pem'
    privatekey_path: '{{ pki_path }}/ca-key.pem'
    csr_path: '{{ pki_path }}/ca.csr'
    provider: selfsigned
    ownca_not_after: +{{ expire_days }}

- name: Generate etcd certificate
  include: etcd_pki.yaml

- name: Generate kubernetes certificate
  include: k8s_pki.yaml

- name: Generate front proxy CA private key
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    remote_src: Yes
  loop:
    - { src: '{{ pki_path }}/ca.pem', dest: '{{ pki_path }}/front-proxy-ca.pem' }
    - { src: '{{ pki_path }}/ca-key.pem', dest: '{{ pki_path }}/front-proxy-ca-key.pem' }

- name: Generate front proxy certificate
  include: front-proxy.yml

- name: Generate harbor certificate
  include: harbor.yml